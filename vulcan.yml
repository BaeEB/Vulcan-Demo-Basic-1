--- # Start
name: example

# 유저의 github 저장소 정보
url:
docker-image:

# predefined docker-image를 사용하되, 추가적인 설정이 필요한 경우 이렇게 정의
extra-build-env-setting-commands:

test-candidates: |
  parser.c

time-out: 3600
max-patch-number : 500

test-build-command: | # 테스트 빌드 커맨드 / defect4cpp 기준 meta.json의 내용이 필요  
  rm -f Makefile
  ./autogen.sh 
  make clean
  make runtest -j10

coverage-build-command: | # 커버리지 빌드 커맨드 / defect4cpp 기준 meta.json의 내용이 필요(SBFL: gcov)
  rm -f Makefile
  ./autogen.sh --with-coverage
  make clean
  make runtest -j10


# 테스트 type이 문제: gtest의 경우 원하는 테스트를 실행할 수 있으니 문제가 없음
# 그렇지 않으면 test-case에 실행할 테스트 번호를 range로 하도록함
# 테스트 실행 역시 range안에 있는 테스트들만 실행하도록 묶어서 command를 부르거나 여러번 불러야함
test-type: automake
test-list: | # 테스트 리스트 커맨드 / 테스트를 하나씩 실행하기 위해 테스트 리스트를 출력해주는 내용 필요
  ./runtest "XML entity subst regression tests"
  index=3; ./runtest "$(sed -n 3p .dpp/test_list)"
  index=4; ./runtest "$(sed -n 4p .dpp/test_list)"
  index=5; ./runtest "$(sed -n 5p .dpp/test_list)"
  index=6; ./runtest "$(sed -n 6p .dpp/test_list)"
  index=7; ./runtest "$(sed -n 7p .dpp/test_list)"
  index=8; ./runtest "$(sed -n 8p .dpp/test_list)"
  index=9; ./runtest "$(sed -n 9p .dpp/test_list)"
  index=31; ./runtest "$(sed -n 31p .dpp/test_list)"
  index=32; ./runtest "$(sed -n 32p .dpp/test_list)"
  index=33; ./runtest "$(sed -n 33p .dpp/test_list)"
  index=34; ./runtest "$(sed -n 34p .dpp/test_list)"
  index=35; ./runtest "$(sed -n 35p .dpp/test_list)"
  index=36; ./runtest "$(sed -n 36p .dpp/test_list)"
  index=37; ./runtest "$(sed -n 37p .dpp/test_list)"
  index=38; ./runtest "$(sed -n 38p .dpp/test_list)"
  DPP_RUN_ERROR_CASE=1 ./runtest "Error cases"
  

test-case:

test-command: | # 테스트 실행
  bash -c "@testcase@"
test-coverage-command: | # 커버리지 테스트 실행 / 테스트 대상을 입력받아서 하나씩 실행할 수 있어야 함
  bash -c "@testcase@"
gcov-exclusion-list: | # 커버리지 제외 대상
  *test*.o
gcov-inclusion-list: | # 커버리지 포함 대상 지정
  .libs/parser.*