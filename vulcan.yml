--- # Start
name: example

# 유저의 github 저장소 정보
url:
docker-image:

# predefined docker-image를 사용하되, 추가적인 설정이 필요한 경우 이렇게 정의
extra-build-env-setting-commands:

test-candidates: |
  md4c/md4c.c

time-out: 3600
max-patch-number : 500

# Command to build user's project
test-build-command: |
  ./config enable-unit-test
  make clean
  make -j10 depend
  make -j10

# Command to build user's project with coverage measurement
coverage-build-command: |
  ./config CFLAGS="--coverage -g -O0 -DDPP_ENABLE_GCOV" LDFLAGS="-lgcov" enable-unit-test
  make clean
  make -j10 depend
  make -j10


test-list: | # Test commands list
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -55 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -56 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -57 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -58 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -59 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -60 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -61 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -62 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -63 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -64 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -65 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -66 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -67 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -68 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -69 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -70 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -71 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -72 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -73 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -74 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -75 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -76 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -77 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -78 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -79 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -80 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -81 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -82 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -83 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -84 AUTOMAKE_TEST_CASE.output | tail -1)'
  bash -c '[ -f AUTOMAKE_TEST_CASE.output ] || make list-tests | grep test_ | grep -v fuzz | grep -v test_ssl_new | grep -v test_rand > AUTOMAKE_TEST_CASE.output';bash -c 'make -j10 test TESTS=$(head -85 AUTOMAKE_TEST_CASE.output | tail -1)'

# Get the command from test-list and run each of them
test-command: | # Run tests
  @testcase@

test-coverage-command: | # Run coverage tests
  @testcase@
gcov-exclusion-list: | # 커버리지 제외 대상
  *test*.o